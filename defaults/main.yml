---

# defaults file for etcd
# common variables
etcd_templates_dir: "{{ role_path }}/templates"
etcd_config_dir: "/etc/etcd"
etcd_config_file: "{{ etcd_config_dir }}/etcd.conf"
etcd_bin: "/usr/bin/etcd"
etcd_data_dir: "/var/lib/etcd"
etcd_client_port: "2379"
etcd_peer_port: "2380"
etcd_cluster_group: "etcd_cluster"
etcd_initial_cluster_state: "new"
etcd_initial_cluster_token: "etcd_cluster"
etcd_packages: 
  - "etcd"
etcd_parameters: []
#- name: "ETCD_NAME"
#  value: "{{ common_short_hostname }}"
#  comment: |
#    ##### --name
#    ## Human-readable name for this member.
#    ## This value is referenced as this node's own entries listed in the
#    ## `--initial-cluster` flag (e.g., `default=http://localhost:2380`). This
#    ## needs to match the key used in the flag if using static bootstrapping. When
#    ## using discovery, each member must have a unique name. `Hostname` or
#    ## `machine-id` can be a good choice.
#    ## default: "default"
#- name: "ETCD_DATA_DIR"
#  value: "{{ etcd_data_dir }}"
#  comment: |
#    ##### --data-dir
#    ## Path to the data directory.
#    ## default: "${name}.etcd"
#- name: "ETCD_HEARTBEAT_INTERVAL"
#  value: "100"
#    comment: |
#    ##### --heartbeat-interval
#    ## Time (in milliseconds) of a heartbeat interval.
#    ## default: "100"
#- name: "ETCD_ELECTION_TIMEOUT"
#  value: "1000"
#  comment: |
#    ##### --election-timeout
#    ## Time (in milliseconds) for an election to timeout.
#    ## default: "1000"
#- name: "ETCD_LISTEN_PEER_URLS"
#  value: "http://{{ common_ip4_default }}:{{ etcd_peer_port }}"
#  comment: |
#    ##### --listen-peer-urls
#    ## List of URLs to listen on for peer traffic. This flag tells the etcd to
#    ## accept incoming requests from its peers on the specified scheme://IP:port
#    ## combinations. Scheme can be either http or https.If 0.0.0.0 is specified as
#    ## the IP, etcd listens to the given port on all interfaces. If an IP address is
#    ## given as well as a port, etcd will listen on the given port and interface.
#    ## Multiple URLs may be used to specify a number of addresses and ports to listen
#    ## on. The etcd will respond to requests from any of the listed addresses and
#    ## ports.
#    ## default: "http://localhost:2380"
#    ## example: "http://10.0.0.1:2380"
#    ## invalid example: "http://example.com:2380" (domain name is invalid for binding)
#- name: "ETCD_LISTEN_CLIENT_URLS"
#  value: "http://{{ common_ip4_default }}:{{ etcd_client_port }},http://127.0.0.1:{{ etcd_client_port }}"
#  comment: |
#    ##### --listen-client-urls
#    ## List of URLs to listen on for client traffic. This flag tells the etcd to
#    ## accept incoming requests from the clients on the specified scheme://IP:port
#    ## combinations. Scheme can be either http or https. If 0.0.0.0 is specified as
#    ## the IP, etcd listens to the given port on all interfaces. If an IP address is
#    ## given as well as a port, etcd will listen on the given port and interface.
#    ## Multiple URLs may be used to specify a number of addresses and ports to listen
#    ## on. The etcd will respond to requests from any of the listed addresses and
#    ## ports.
#    ## default: "http://localhost:2379"
#    ## example: "http://10.0.0.1:2379"
#    ## invalid example: "http://example.com:2379" (domain name is invalid for binding)
#- name: "ETCD_INITIAL_ADVERTISE_PEER_URLS"
#  value: "http://{{ common_full_hostname }}:{{ etcd_peer_port }}"
#  comment: |
#    ##### --initial-advertise-peer-urls
#    ## List of this member's peer URLs to advertise to the rest of the cluster.
#    ## These addresses are used for communicating etcd data around the cluster. At
#    ## least one must be routable to all cluster members. These URLs can contain
#    ## domain names.
#    ## default: "http://localhost:2380"
#    ## example: "http://example.com:2380, http://10.0.0.1:2380"
#- name: ETCD_INITIAL_CLUSTER"
#  value: "{% for host in groups[etcd_cluster_group] %}{{ hostvars[host]['common_short_hostname'] }}=http://{{ hostvars[host]['common_full_hostname'] }}:{{ etcd_peer_port }}{% if not loop.last %},{% endif %}{% endfor %}"
#  comment: |
#    ##### --initial-cluster
#    ## Initial cluster configuration for bootstrapping.
#    ## The key is the value of the `--name` flag for each node provided. The
#    ## default uses `default` for the key because this is the default for the
#    ## `--name` flag.
#    ## default: "default=http://localhost:2380"
#- name: "ETCD_INITIAL_CLUSTER_STATE"
#  value: "{{ etcd_initial_cluster_state }}"
#  comment: |
#    ##### --initial-cluster-state
#    ## Initial cluster state ("new" or "existing"). Set to `new` for all members
#    ## present during initial static or DNS bootstrapping. If this option is set to
#    ## `existing`, etcd will attempt to join the existing cluster. If the wrong value
#    ## is set, etcd will attempt to start but fail safely.
#    ## default: "new"
#- name: "ETCD_INITIAL_CLUSTER_TOKEN"
#  value: "{{ etcd_initial_cluster_token }}"
#  comment: |
#    ##### --initial-cluster-token
#    ## Initial cluster token for the etcd cluster during bootstrap.
#    ## default: "etcd-cluster"
#- name: "ETCD_ADVERTISE_CLIENT_URLS"
#  value: "http://{{ common_full_hostname }}:{{ etcd_client_port }}"
#  comment: |
#    ##### --advertise-client-urls
#    ## List of this member's client URLs to advertise to the rest of the cluster.
#    ## These URLs can contain domain names.
#    ## Be careful if advertising URLs such as http://localhost:2379 from a cluster
#    ## member and are using the proxy feature of etcd. This will cause loops, because
#    ## the proxy will be forwarding requests to itself until its resources (memory,
#    ## file descriptors) are eventually depleted.
#    ## default: "http://localhost:2379"
#    ## example: "http://example.com:2379, http://10.0.0.1:2379"
